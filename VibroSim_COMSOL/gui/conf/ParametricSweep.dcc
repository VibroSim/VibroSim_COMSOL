# Note: datacollect config files are passed through an m4 preprocessor
# so you can use e.g. "m4_include([[includefile.dcc]])" to include
# another file. As an alternative you can manually load multiple config
# files before opening your experiment log, either from the 
# datacollect command line or from the datacollect gui

global dgcontroller, autocontroller_specimendb

from dc_value import excitationparamsvalue as excitationparamsv
from paramdb2 import autocontroller_specimendb
from dc_value import numericunitsvalue as numericunitsv
from dc_value import stringvalue as stringv

# call createparamserver() if dbus (i.e. python/matlab/etc.) access to the parameter 
# database is likely to be needed.
createparamserver()  # Multiple calls to createparamserver() are OK

# parameter names
paramdb.addparam("varyparam1",stringv)
paramdb.addparam("varyparam2",stringv)

# parameter names
paramdb.addparam("param1startval",stringv)
paramdb.addparam("param1stepval",stringv)
paramdb.addparam("param1endval",stringv)
paramdb.addparam("param1vals",stringv)

paramdb.addparam("param2startval",stringv)
paramdb.addparam("param2stepval",stringv)
paramdb.addparam("param2endval",stringv)
paramdb.addparam("param2vals",stringv)

# notes
paramdb.addparam("paramsweepnotes",stringv)

# sweep type
paramdb.addparam("sweeptype",stringv,options=["All Combinations","Specified Combinations"])
paramdb["sweeptype"].requestval_sync("Specified Combinations")


